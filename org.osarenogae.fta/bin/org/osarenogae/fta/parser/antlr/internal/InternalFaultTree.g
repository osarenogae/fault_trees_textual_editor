/*
 * generated by Xtext 2.25.0
 */
grammar InternalFaultTree;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.osarenogae.fta.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.osarenogae.fta.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osarenogae.fta.services.FaultTreeGrammarAccess;

}

@parser::members {

 	private FaultTreeGrammarAccess grammarAccess;

    public InternalFaultTreeParser(TokenStream input, FaultTreeGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "FaultTreeModel";
   	}

   	@Override
   	protected FaultTreeGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFaultTreeModel
entryRuleFaultTreeModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFaultTreeModelRule()); }
	iv_ruleFaultTreeModel=ruleFaultTreeModel
	{ $current=$iv_ruleFaultTreeModel.current; }
	EOF;

// Rule FaultTreeModel
ruleFaultTreeModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFaultTreeModelAccess().getFaultTreeBeginParserRuleCall_0());
			}
			lv_faultTree_0_0=rulebegin
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFaultTreeModelRule());
				}
				add(
					$current,
					"faultTree",
					lv_faultTree_0_0,
					"org.osarenogae.fta.FaultTree.begin");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulebegin
entryRulebegin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeginRule()); }
	iv_rulebegin=rulebegin
	{ $current=$iv_rulebegin.current; }
	EOF;

// Rule begin
rulebegin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBeginAccess().getIntermediateEventDefinitionParserRuleCall_0());
			}
			this_IntermediateEventDefinition_0=ruleIntermediateEventDefinition
			{
				$current = $this_IntermediateEventDefinition_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		otherlv_1='root'
		{
			newLeafNode(otherlv_1, grammarAccess.getBeginAccess().getRootKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBeginAccess().getFaultTreeParserRuleCall_2_0());
				}
				lv_fault_2_0=ruleTree
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeginRule());
					}
					add(
						$current,
						"fault",
						lv_fault_2_0,
						"org.osarenogae.fta.FaultTree.Tree");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIntermediateEventDefinition
entryRuleIntermediateEventDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntermediateEventDefinitionRule()); }
	iv_ruleIntermediateEventDefinition=ruleIntermediateEventDefinition
	{ $current=$iv_ruleIntermediateEventDefinition.current; }
	EOF;

// Rule IntermediateEventDefinition
ruleIntermediateEventDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntermediateEventDefinitionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getIntermediateEventDefinitionAccess().getNameIntermediateEventCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getIntermediateEventDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntermediateEventDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getIntermediateEventDefinitionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntermediateEventDefinitionAccess().getValueTreeParserRuleCall_3_0());
				}
				lv_value_3_0=ruleTree
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntermediateEventDefinitionRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.osarenogae.fta.FaultTree.Tree");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTree
entryRuleTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTreeRule()); }
	iv_ruleTree=ruleTree
	{ $current=$iv_ruleTree.current; }
	EOF;

// Rule Tree
ruleTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTreeAccess().getEventParserRuleCall_0());
		}
		this_Event_0=ruleEvent
		{
			$current = $this_Event_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTreeAccess().getOrGateParserRuleCall_1());
		}
		this_OrGate_1=ruleOrGate
		{
			$current = $this_OrGate_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTreeAccess().getAndGateParserRuleCall_2());
		}
		this_AndGate_2=ruleAndGate
		{
			$current = $this_AndGate_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTreeAccess().getInhibitGateParserRuleCall_3());
		}
		this_InhibitGate_3=ruleInhibitGate
		{
			$current = $this_InhibitGate_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrGate
entryRuleOrGate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrGateRule()); }
	iv_ruleOrGate=ruleOrGate
	{ $current=$iv_ruleOrGate.current; }
	EOF;

// Rule OrGate
ruleOrGate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrGateAccess().getLeftAndGateParserRuleCall_0_0());
				}
				lv_left_0_0=ruleAndGate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrGateRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"org.osarenogae.fta.FaultTree.AndGate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='or'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrGateAccess().getOrKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrGateAccess().getRightAndGateParserRuleCall_2_0());
				}
				lv_right_2_0=ruleAndGate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrGateRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"org.osarenogae.fta.FaultTree.AndGate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndGate
entryRuleAndGate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndGateRule()); }
	iv_ruleAndGate=ruleAndGate
	{ $current=$iv_ruleAndGate.current; }
	EOF;

// Rule AndGate
ruleAndGate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAndGateAccess().getLeftInhibitGateParserRuleCall_0_0());
				}
				lv_left_0_0=ruleInhibitGate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndGateRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"org.osarenogae.fta.FaultTree.InhibitGate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='and'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndGateAccess().getAndKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndGateAccess().getRightInhibitGateParserRuleCall_2_0());
				}
				lv_right_2_0=ruleInhibitGate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndGateRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"org.osarenogae.fta.FaultTree.InhibitGate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInhibitGate
entryRuleInhibitGate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInhibitGateRule()); }
	iv_ruleInhibitGate=ruleInhibitGate
	{ $current=$iv_ruleInhibitGate.current; }
	EOF;

// Rule InhibitGate
ruleInhibitGate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInhibitGateAccess().getLeftEventParserRuleCall_0_0());
				}
				lv_left_0_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInhibitGateRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"org.osarenogae.fta.FaultTree.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='inhibit'
		{
			newLeafNode(otherlv_1, grammarAccess.getInhibitGateAccess().getInhibitKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInhibitGateAccess().getRightConditionalEventParserRuleCall_2_0());
				}
				lv_right_2_0=ruleConditionalEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInhibitGateRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"org.osarenogae.fta.FaultTree.ConditionalEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEventAccess().getBasicEventParserRuleCall_0());
		}
		this_BasicEvent_0=ruleBasicEvent
		{
			$current = $this_BasicEvent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getExternalEventParserRuleCall_1());
		}
		this_ExternalEvent_1=ruleExternalEvent
		{
			$current = $this_ExternalEvent_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getConditionalEventParserRuleCall_2());
		}
		this_ConditionalEvent_2=ruleConditionalEvent
		{
			$current = $this_ConditionalEvent_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEventAccess().getIntermediateEventParserRuleCall_3());
		}
		this_IntermediateEvent_3=ruleIntermediateEvent
		{
			$current = $this_IntermediateEvent_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntermediateEvent
entryRuleIntermediateEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntermediateEventRule()); }
	iv_ruleIntermediateEvent=ruleIntermediateEvent
	{ $current=$iv_ruleIntermediateEvent.current; }
	EOF;

// Rule IntermediateEvent
ruleIntermediateEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='intermediate'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntermediateEventAccess().getIntermediateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIntermediateEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntermediateEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBasicEvent
entryRuleBasicEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicEventRule()); }
	iv_ruleBasicEvent=ruleBasicEvent
	{ $current=$iv_ruleBasicEvent.current; }
	EOF;

// Rule BasicEvent
ruleBasicEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='basic'
		{
			newLeafNode(otherlv_0, grammarAccess.getBasicEventAccess().getBasicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBasicEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getBasicEventAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicEventRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleConditionalEvent
entryRuleConditionalEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalEventRule()); }
	iv_ruleConditionalEvent=ruleConditionalEvent
	{ $current=$iv_ruleConditionalEvent.current; }
	EOF;

// Rule ConditionalEvent
ruleConditionalEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='conditional'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalEventAccess().getConditionalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConditionalEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getConditionalEventAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionalEventRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleExternalEvent
entryRuleExternalEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalEventRule()); }
	iv_ruleExternalEvent=ruleExternalEvent
	{ $current=$iv_ruleExternalEvent.current; }
	EOF;

// Rule ExternalEvent
ruleExternalEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='external'
		{
			newLeafNode(otherlv_0, grammarAccess.getExternalEventAccess().getExternalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExternalEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getExternalEventAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalEventRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
